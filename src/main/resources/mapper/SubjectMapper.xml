<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cssl.mapper.SubjectMapper">
    <resultMap id="showItemss" type="Items">
        <id property="iid" column="iid"></id>
        <result property="sid" column="sid"></result>
        <result property="uid" column="uid"></result>
        <result property="oid" column="oid"></result>
        <collection property="subject"  ofType="Subject" column="sid" >
            <id property="sid" column="sid"></id>
            <result property="title" column="title"></result>
            <result property="type" column="type"></result>
            <result property="choose" column="choose"></result>
            <result property="poll" column="poll"></result>
        </collection>
        <collection property="user" ofType="User" column="uid" select="selectUser">
            <result property="uid" column="userId"></result>
        </collection>
        <collection property="options" ofType="Options" column="sid" select="selectOptions">
            <id column="oid" property="oid"></id>
            <result property="content" column="content"></result>
        </collection>
    </resultMap>
    <select id="selectUser" parameterType="int" resultType="User">
        select * from users where userId=#{uid}
    </select>
    <select id="selectOptions" parameterType="int" resultType="Options">
        SELECT s.`oid` as 'oid',`content` as 'content',`osid` as 'osid',COUNT(i.oid) AS 'opoll' FROM OPTIONS s
        LEFT JOIN item i ON(s.oid=i.oid)
         WHERE  osid=#{sid}
        GROUP BY s.oid
    </select>
    <select id="showAllSubject"  resultType="Subject" parameterType="map">
        SELECT s.sid as 'sid',s.title AS 'title',(SELECT COUNT(0) FROM `options` WHERE osid=s.`sid`)  AS 'choose',(SELECT COUNT(0) FROM `item` WHERE  sid=s.sid) AS 'poll'
	    FROM `subject` s
	    LEFT JOIN `options` o ON s.sid=o.oid
        <if test="title!=null and title!=''">
            where s.title like concat('%',#{title},'%')
        </if>
        <if test="sid!=null and  sid!=0">
            where sid=#{sid}
        </if>
    </select>

    <select id="showItems" resultMap="showItemss" parameterType="Integer">
       SELECT DISTINCT s.sid AS 'sid',s.title AS 'title',s.type AS 'type'
        FROM SUBJECT s
        LEFT JOIN item i ON(s.sid=i.sid)
        LEFT JOIN `options` o ON(o.oid=i.oid)
        LEFT JOIN `users` u ON(u.userId=i.uid)
        WHERE s.sid=#{index}
    </select>
    
    <insert id="addSubject" parameterType="Subject">
        INSERT into Subject(title,type) value(#{title},#{type})
    </insert>
    <insert id="addOptions" parameterType="Subject">
        INSERT into  Options(content,osid) value
        <foreach collection="allOptions" separator="," item="i" index="index">
            (#{i},#{sid})
        </foreach>
        <selectKey keyProperty="sid" keyColumn="sid" order="BEFORE" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID() as sid;
        </selectKey>
    </insert>
    <delete id="delOptions" parameterType="Integer">
        delete  from options where osid=#{osid}
    </delete>
    <delete id="delSubject" parameterType="Integer">
        delete  from subject where sid=#{sid}
    </delete>
    <delete id="delItem" parameterType="Integer">
        delete  from item where sid=#{sid}
    </delete>
    <insert id="addItems" parameterType="Integer">
        INSERT INTO item(`uid`,`sid`,`oid`) values (#{uid},#{sid},#{pid});
    </insert>
    <select id="findItems" parameterType="Integer" resultType="Integer">
        select count(0) from item where uid=#{uid} and sid=#{sid}
    </select>
    <insert id="addOP" parameterType="Options">
        INSERT INTO OPTIONS(content,osid) VALUE(#{content},#{osid})
    </insert>
    <delete id="delOP" parameterType="Integer">
        delete  from options where oid=#{oid}
    </delete>
    <update id="updSub" parameterType="Integer">
        update subject set type=#{type} where sid=#{sid}
    </update>
    <delete id="delItems" parameterType="Integer">
        delete  from Item where oid=#{oid}
    </delete>
</mapper>